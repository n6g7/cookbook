{
  "rules": {
    "baskets": {
      "$uid": {
        ".read": "auth.uid == $uid",
        ".write": "auth.uid == $uid",

        "$bid": {
          "archived": {
            ".validate": "newData.isBoolean()"
          },
          "name": {
            ".validate": "newData.isString() && newData.val().length > 0"
          },
          "recipes": {
            "$rid": {
              ".validate": "root.child('recipes/' + $rid).exists() && newData.isNumber()"
            }
          }
        }
      }
    },

    "categories": {
      ".read": "auth != null",
      ".write": false,

      "$cid": {
        "name": {
          ".validate": "newData.isString() && newData.val().length > 0"
        }
      }
    },

    "ingredients": {
      ".read": "auth != null",
      ".write": false,

      "$iid": {
        "category": {
          ".validate": "root.child('categories/' + newData.val()).exists()"
        },
        "cheese": {
          ".validate": "newData.isBoolean()"
        },
        "meat": {
          ".validate": "newData.isBoolean()"
        },
        "name": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "unit": {
          ".validate": "root.child('units/' + newData.val()).exists()"
        }
      }
    },

    "recipes": {
      ".read": "auth != null",

      "$rid": {
        ".write": "auth != null",

        "calories": {
          ".validate": "newData.isNumber()"
        },
        "healthScore": {
          ".validate": "newData.isNumber()"
        },
        "image": {
          ".validate": "!newData.exists() || newData.isString()"
        },
        "ingredients": {
          "$iid": {
            ".validate": "root.child('ingredients/' + $iid).exists() && newData.isNumber()"
          }
        },
        "name": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "preparationTime": {
          ".validate": "newData.isNumber()"
        },
        "serves": {
          ".validate": "newData.isNumber()"
        }
      }
    },

    "units": {
      ".read": "auth != null",
      ".write": false,

      "$uid": {
        "name": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "symbol": {
          ".validate": "newData.isString() && newData.val().length > 0"
        }
      }
    },

    "users": {
      ".read": false,
      ".write": false,

      "$uid": {
        "access": {
          ".validate": "newData.isBoolean()"
        }
      }
    }
  }
}
